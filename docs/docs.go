// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/accounts/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Создание аккаунта",
                "parameters": [
                    {
                        "description": "Данные аккаунта",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.accountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/achievements/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievements"
                ],
                "summary": "Получение достижений",
                "parameters": [
                    {
                        "type": "string",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_listAchievementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/achievements/{AccountId}/{AchievementId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievements"
                ],
                "summary": "Получение достижения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор достижения",
                        "name": "AchievementId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор аккаунта",
                        "name": "AccountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_getAchievementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Служебные"
                ],
                "summary": "Пинг сервиса",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-string"
                        }
                    }
                }
            }
        },
        "/api/quests/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Получение квестов",
                "parameters": [
                    {
                        "type": "string",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "settlement_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_listQuestsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/quests/start/{accountId}/{questId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Начало квеста",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор квеста",
                        "name": "questId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_startQuestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/quests/step/end/{accountId}/{questStepId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Победа над босом",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор шага квеста",
                        "name": "questStepId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_questStepEndResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/quests/{accountId}/{questId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Получение информации о квесте",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор квеста",
                        "name": "questId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_getQuestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/riddles/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Riddles"
                ],
                "summary": "Получение квестов",
                "parameters": [
                    {
                        "type": "string",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "quest_step_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_listRiddlesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/riddles/{accountId}/{riddleId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Riddles"
                ],
                "summary": "Обновление загадки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор загадки",
                        "name": "riddleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_updateRiddleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/settlements/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settlements"
                ],
                "summary": "Поиск города",
                "parameters": [
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_searchSettlementsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wiki/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wiki"
                ],
                "summary": "Создание элемента энциклопедии",
                "responses": {
                    "200": {
                        "description": "Ok\" //хз как тут сделать",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseOk"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wiki/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wiki"
                ],
                "summary": "Получение элементов энциклопедии",
                "parameters": [
                    {
                        "description": "Параметры выборки",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.listEncyclopediaItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_listEncyclopediaItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wiki/{EncyclopediaItemId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wiki"
                ],
                "summary": "Получение элемента энциклопедии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор элемента энциклопедии",
                        "name": "EncyclopediaItemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseWithDetails-handler_getEncyclopediaItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/shttp.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.QuestType": {
            "type": "string",
            "enum": [
                "route"
            ],
            "x-enum-varnames": [
                "RouteQuestType"
            ]
        },
        "handler.accountCreateRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                }
            }
        },
        "handler.getAchievementResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "passed": {
                    "type": "integer"
                },
                "steps": {
                    "type": "integer"
                }
            }
        },
        "handler.getEncyclopediaItemResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "settlementId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.getQuestResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preview": {
                    "$ref": "#/definitions/handler.image"
                },
                "reward": {
                    "type": "number"
                },
                "settlement_id": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.getQuestResponseStep"
                    }
                },
                "type": {
                    "$ref": "#/definitions/entity.QuestType"
                }
            }
        },
        "handler.getQuestResponseStep": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.image"
                    }
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "place_type": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.getQuestResponseStepSchedule"
                    }
                },
                "status": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "handler.getQuestResponseStepSchedule": {
            "type": "object",
            "properties": {
                "from_to": {
                    "type": "string"
                },
                "week_day": {
                    "type": "string"
                }
            }
        },
        "handler.image": {
            "type": "object",
            "properties": {
                "sizes": {
                    "$ref": "#/definitions/handler.sizes"
                }
            }
        },
        "handler.listAchievementResponseElement": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "passed": {
                    "type": "integer"
                },
                "steps": {
                    "type": "integer"
                }
            }
        },
        "handler.listEncyclopediaItemElement": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "settlement_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.listEncyclopediaItemRequest": {
            "type": "object",
            "properties": {
                "settlement_id": {
                    "type": "string"
                }
            }
        },
        "handler.listQuestsResponseElement": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preview": {
                    "$ref": "#/definitions/handler.image"
                },
                "reward": {
                    "type": "number"
                },
                "settlement_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.QuestType"
                }
            }
        },
        "handler.listRiddlesResponseElement": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "letters": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quest_step_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handler.questStepEndResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preview": {
                    "$ref": "#/definitions/handler.image"
                },
                "reward": {
                    "type": "number"
                },
                "settlement_id": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.getQuestResponseStep"
                    }
                },
                "type": {
                    "$ref": "#/definitions/entity.QuestType"
                }
            }
        },
        "handler.searchSettlementsResponseElement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.size": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "handler.sizes": {
            "type": "object",
            "properties": {
                "m": {
                    "$ref": "#/definitions/handler.size"
                },
                "o": {
                    "$ref": "#/definitions/handler.size"
                },
                "x": {
                    "$ref": "#/definitions/handler.size"
                }
            }
        },
        "handler.startQuestResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preview": {
                    "$ref": "#/definitions/handler.image"
                },
                "reward": {
                    "type": "number"
                },
                "settlement_id": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.getQuestResponseStep"
                    }
                },
                "type": {
                    "$ref": "#/definitions/entity.QuestType"
                }
            }
        },
        "handler.updateRiddleResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "letters": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quest_step_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "shttp.ResponseError": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {}
            }
        },
        "shttp.ResponseOk": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {}
            }
        },
        "shttp.ResponseWithDetails-handler_getAchievementResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.getAchievementResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-handler_getEncyclopediaItemResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.getEncyclopediaItemResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-handler_getQuestResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.getQuestResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-handler_listAchievementResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.listAchievementResponseElement"
                    }
                }
            }
        },
        "shttp.ResponseWithDetails-handler_listEncyclopediaItemResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.listEncyclopediaItemElement"
                    }
                }
            }
        },
        "shttp.ResponseWithDetails-handler_listQuestsResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.listQuestsResponseElement"
                    }
                }
            }
        },
        "shttp.ResponseWithDetails-handler_listRiddlesResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.listRiddlesResponseElement"
                    }
                }
            }
        },
        "shttp.ResponseWithDetails-handler_questStepEndResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.questStepEndResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-handler_searchSettlementsResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.searchSettlementsResponseElement"
                    }
                }
            }
        },
        "shttp.ResponseWithDetails-handler_startQuestResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.startQuestResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-handler_updateRiddleResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/handler.updateRiddleResponse"
                }
            }
        },
        "shttp.ResponseWithDetails-string": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ExternalId": {
            "type": "apiKey",
            "name": "ExternalId",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
